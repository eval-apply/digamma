((close
   (2 0 . loop)
   (=n.iloc (0 . 0) 0)
   (if.true
     (ret.iloc 0 . 1))
   (push.n+.iloc (0 . 0) -1)
   (push.iloc.0 . 0)
   (iloc.0 . 1)
   (push.cons)
   (apply.gloc.of |loop`21*|))
 (set.gloc.of |loop`21*|)
 (close
   (3 0 . my-try)
   (iloc.0 . 0)
   (if.null?
     (iloc.0 . 1)
     (if.null?.ret.const . 1)
     (ret.const . 0))
   (call
     (call
       (push.car.iloc (0 . 0))
       (push.const . 1)
       (push.iloc.0 . 2)
       (apply.gloc.of |ok?`16*|))
     (if.true
       (push.cdr.iloc (0 . 0))
       (push.iloc.0 . 1)
       (push.subr.gloc.of append 2)
       (push.const . ())
       (push.car.iloc (0 . 0))
       (iloc.0 . 2)
       (push.cons)
       (apply.gloc.of |my-try`16*|))
     (ret.const . 0))
   (push)
   (call
     (push.cdr.iloc (0 . 0))
     (push.car.iloc (0 . 0))
     (iloc.0 . 1)
     (push.cons)
     (push.iloc.0 . 2)
     (apply.gloc.of |my-try`16*|))
   (push)
   (ret.subr.gloc.of +))
 (set.gloc.of |my-try`16*|)
 (close
   (3 0 . ok?)
   (iloc.0 . 2)
   (if.null?.ret.const . #t)
   (push.car.iloc (0 . 2))
   (push.iloc.0 . 0)
   (push.iloc.0 . 1)
   (push.subr.gloc.of + 2)
   (subr.gloc.of = 2)
   (if.true.ret.const . #f)
   (push.car.iloc (0 . 2))
   (push.iloc.0 . 0)
   (push.iloc.0 . 1)
   (push.subr.gloc.of - 2)
   (subr.gloc.of = 2)
   (if.true.ret.const . #f)
   (push.iloc.0 . 0)
   (push.n+.iloc (0 . 1) 1)
   (push.cdr.iloc (0 . 2))
   (apply.gloc.of |ok?`16*|))
 (set.gloc.of |ok?`16*|)
 (close (1 0 . |1-to|)
   (push.iloc.0 . 0)
   (push.const . ())
   (apply.gloc.of |loop`21*|))
 (set.gloc.of |1-to`16*|)
 (close
   (1 0 . nqueens)
   (call
     (push.iloc.0 . 0)
     (apply.gloc.of |1-to`16*|))
   (push)
   (push.const . ())
   (push.const . ())
   (apply.gloc.of |my-try`16*|))
 (set.gloc.of nqueens)
 (ret.const.unspec))
