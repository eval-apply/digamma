; ModuleID = 'd811b605-66ce-45f1-8488-2377373e1de6'
source_filename = "d811b605-66ce-45f1-8488-2377373e1de6"

define i64 @bc5d141f-c6b2-4f05-84e0-88d4433fbd72(i64* noalias nocapture) local_unnamed_addr {
entry:
  %1 = getelementptr i64, i64* %0, i64 6
  %2 = getelementptr i64, i64* %0, i64 7
  %3 = getelementptr i64, i64* %0, i64 3
  %4 = getelementptr i64, i64* %0, i64 8
  %5 = bitcast i64* %1 to i64**
  br label %tailrecurse

tailrecurse:                                      ; preds = %continue1, %entry
  %6 = load i64, i64* %1, align 4
  %7 = load i64, i64* %2, align 4
  %8 = add i64 %6, 128
  %9 = icmp ult i64 %8, %7
  br i1 %9, label %stack_ok, label %stack_overflow

stack_ok:                                         ; preds = %stack_overflow, %tailrecurse
  %10 = load i64, i64* %3, align 4
  %11 = add i64 %10, -8
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = sub i64 0, %13
  %15 = getelementptr i64, i64* %12, i64 %14
  %16 = load i64, i64* %15, align 4
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %nonfixnum_true, label %nonfixnum_false

stack_overflow:                                   ; preds = %tailrecurse
  tail call void @c_collect_stack(i64* nonnull %0, i64 128)
  br label %stack_ok

continue:                                         ; preds = %nonfixnum_true
  %.pre = load i64, i64* %4, align 4
  %19 = icmp eq i64 %.pre, 34
  br i1 %19, label %f9h_true, label %f9h_false

nonfixnum_true:                                   ; preds = %stack_ok
  store i64 4471700016, i64* %0, align 4
  %20 = tail call i64 @c_lt_n_iloc(i64* nonnull %0, i64 %16, i64 5)
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %continue, label %fallback_fail

nonfixnum_false:                                  ; preds = %stack_ok
  %22 = icmp slt i64 %16, 5
  br i1 %22, label %continue.thread5, label %continue.thread

continue.thread5:                                 ; preds = %nonfixnum_false
  store i64 18, i64* %4, align 4
  br label %f9h_false

continue.thread:                                  ; preds = %nonfixnum_false
  store i64 34, i64* %4, align 4
  br label %f9h_true

fallback_fail:                                    ; preds = %fallback, %nonfixnum_true, %f9h_false
  %merge = phi i64 [ %., %f9h_false ], [ 3, %nonfixnum_true ], [ 3, %fallback ]
  ret i64 %merge

f9h_true:                                         ; preds = %continue.thread, %continue
  %23 = load i64*, i64** %5, align 8
  tail call fastcc void @prepare_call(i64* noalias nocapture nonnull %0, i64* noalias nocapture %23) #0
  store i64 4471699968, i64* %23, align 4
  %24 = getelementptr i64, i64* %23, i64 4
  store i64 ptrtoint (i64 (i64*)* @fc1ab09d-42bc-4d78-8263-647db765534b to i64), i64* %24, align 4
  %25 = load i64, i64* %3, align 4
  %26 = add i64 %25, -8
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = sub i64 0, %28
  %30 = getelementptr i64, i64* %27, i64 %29
  %31 = load i64, i64* %30, align 4
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %fallback, label %fixnum_true

f9h_false:                                        ; preds = %continue, %continue.thread5
  %34 = load i64, i64* %3, align 4
  %35 = add i64 %34, -8
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 4
  %38 = sub i64 0, %37
  %39 = getelementptr i64, i64* %36, i64 %38
  %40 = load i64, i64* %39, align 4
  store i64 %40, i64* %4, align 4
  %41 = icmp eq i64 %40, 66
  %. = select i1 %41, i64 7, i64 1
  br label %fallback_fail

continue1:                                        ; preds = %fallback, %valid_true
  tail call void @c_prepare_apply(i64* nonnull %0, i64 4471512832)
  br label %tailrecurse

fixnum_true:                                      ; preds = %f9h_true
  %42 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %31, i64 -2)
  %43 = extractvalue { i64, i1 } %42, 1
  br i1 %43, label %fallback, label %valid_true

fallback:                                         ; preds = %fixnum_true, %f9h_true
  %44 = tail call i64 @c_push_nadd_iloc(i64* nonnull %0, i64 4471685376)
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %continue1, label %fallback_fail

valid_true:                                       ; preds = %fixnum_true
  %46 = extractvalue { i64, i1 } %42, 0
  %47 = load i64, i64* %1, align 4
  %48 = inttoptr i64 %47 to i64*
  store i64 %46, i64* %48, align 4
  %49 = add i64 %47, 8
  store i64 %49, i64* %1, align 4
  br label %continue1
}

; Function Attrs: nounwind
define weak fastcc void @prepare_call(i64* noalias nocapture, i64* noalias nocapture) local_unnamed_addr #0 {
entry:
  %2 = getelementptr i64, i64* %1, i64 1
  store i64 82, i64* %2, align 4
  %3 = getelementptr i64, i64* %0, i64 2
  %4 = load i64, i64* %3, align 4
  %5 = getelementptr i64, i64* %1, i64 2
  store i64 %4, i64* %5, align 4
  %6 = getelementptr i64, i64* %0, i64 3
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr i64, i64* %1, i64 3
  store i64 %7, i64* %8, align 4
  %9 = getelementptr i64, i64* %0, i64 4
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr i64, i64* %1, i64 5
  store i64 %10, i64* %11, align 4
  %12 = getelementptr i64, i64* %1, i64 6
  %13 = ptrtoint i64* %12 to i64
  %14 = getelementptr i64, i64* %0, i64 6
  store i64 %13, i64* %14, align 4
  store i64 %13, i64* %3, align 4
  %15 = ptrtoint i64* %11 to i64
  store i64 %15, i64* %9, align 4
  ret void
}

declare void @c_collect_stack(i64*, i64) local_unnamed_addr

declare i64 @c_lt_n_iloc(i64*, i64, i64) local_unnamed_addr

; Function Attrs: nounwind
define i64 @fc1ab09d-42bc-4d78-8263-647db765534b(i64* noalias nocapture) #0 {
entry:
  %1 = getelementptr i64, i64* %0, i64 6
  %2 = load i64, i64* %1, align 4
  %3 = inttoptr i64 %2 to i64*
  %4 = getelementptr i64, i64* %0, i64 8
  %5 = load i64, i64* %4, align 4
  store i64 %5, i64* %3, align 4
  %6 = add i64 %2, 8
  store i64 %6, i64* %1, align 4
  %7 = inttoptr i64 %6 to i64*
  tail call fastcc void @prepare_call(i64* noalias nocapture %0, i64* noalias nocapture %7) #0
  store i64 4471699936, i64* %7, align 4
  %8 = getelementptr i64, i64* %7, i64 4
  store i64 ptrtoint (i64 (i64*)* @"8fc46283-2072-44c3-913a-f757c1b3f8f9" to i64), i64* %8, align 4
  %9 = getelementptr i64, i64* %0, i64 3
  %10 = load i64, i64* %9, align 4
  %11 = add i64 %10, -8
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = sub i64 0, %13
  %15 = getelementptr i64, i64* %12, i64 %14
  %16 = load i64, i64* %15, align 4
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %fallback, label %fixnum_true

continue:                                         ; preds = %fallback, %valid_true
  tail call void @c_prepare_apply(i64* nonnull %0, i64 4471512832) #0
  %19 = musttail call i64 @bc5d141f-c6b2-4f05-84e0-88d4433fbd72(i64* nonnull %0) #0
  ret i64 %19

fixnum_true:                                      ; preds = %entry
  %20 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %16, i64 -4)
  %21 = extractvalue { i64, i1 } %20, 1
  br i1 %21, label %fallback, label %valid_true

fallback:                                         ; preds = %fixnum_true, %entry
  %22 = tail call i64 @c_push_nadd_iloc(i64* nonnull %0, i64 4471700624) #0
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %continue, label %fallback_fail

valid_true:                                       ; preds = %fixnum_true
  %24 = extractvalue { i64, i1 } %20, 0
  %25 = load i64, i64* %1, align 4
  %26 = inttoptr i64 %25 to i64*
  store i64 %24, i64* %26, align 4
  %27 = add i64 %25, 8
  store i64 %27, i64* %1, align 4
  br label %continue

fallback_fail:                                    ; preds = %fallback
  ret i64 3
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #1

declare i64 @c_push_nadd_iloc(i64*, i64) local_unnamed_addr

declare void @c_prepare_apply(i64*, i64) local_unnamed_addr

; Function Attrs: nounwind
define i64 @"8fc46283-2072-44c3-913a-f757c1b3f8f9"(i64* noalias nocapture) #0 {
entry:
  %1 = getelementptr i64, i64* %0, i64 6
  %2 = load i64, i64* %1, align 4
  %3 = inttoptr i64 %2 to i64*
  %4 = getelementptr i64, i64* %0, i64 8
  %5 = load i64, i64* %4, align 4
  store i64 %5, i64* %3, align 4
  %6 = add i64 %2, 8
  store i64 %6, i64* %1, align 4
  %7 = getelementptr i64, i64* %0, i64 2
  %8 = load i64, i64* %7, align 4
  store i64 4471699920, i64* %0, align 4
  %9 = tail call i64 inttoptr (i64 4437581360 to i64 (i64*, i64, i64)*)(i64* %0, i64 2, i64 %8) #0
  store i64 %9, i64* %4, align 4
  %10 = icmp eq i64 %9, 66
  %spec.select = select i1 %10, i64 3, i64 1
  ret i64 %spec.select
}

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone speculatable }
